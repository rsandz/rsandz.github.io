<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Ryan Sandoval</title><link>https://rsandz.github.io/</link><description>Recent content on Ryan Sandoval</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 16 Jun 2022 20:00:04 -0600</lastBuildDate><atom:link href="https://rsandz.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Resume</title><link>https://rsandz.github.io/resume/</link><pubDate>Thu, 16 Jun 2022 20:09:57 -0600</pubDate><guid>https://rsandz.github.io/resume/</guid><description>To view my resume, please note that you will have to request Google Drive access. This is to prevent spam - sorry for the inconvenience!
Click Here to Get Google Drive Access</description></item><item><title>Web Development</title><link>https://rsandz.github.io/skills/web/</link><pubDate>Thu, 16 Jun 2022 20:00:04 -0600</pubDate><guid>https://rsandz.github.io/skills/web/</guid><description>Full stack web development is my jam! I love to work with both front-end and back-end technologies. It&amp;rsquo;s always cool when new technologies come out and it&amp;rsquo;s fun for me to learn them. I don&amp;rsquo;t have a favourite stack since I believe that&amp;rsquo;s it&amp;rsquo;s important to use the right tool for the job. However, I commonly use these frameworks in my projects:
React Material UI Flask Docker PyQt (For native client applications)</description></item><item><title>Automation</title><link>https://rsandz.github.io/skills/automation/</link><pubDate>Thu, 16 Jun 2022 19:13:09 -0600</pubDate><guid>https://rsandz.github.io/skills/automation/</guid><description>It&amp;rsquo;s good to be a lazy developer! I have a passion for automating mundane tasks to improve productivity and efficiency. Underneath my belt are numerous tools such as:
Python Bash Ansible CI Pipelines</description></item><item><title>Embedded Systems</title><link>https://rsandz.github.io/skills/embedded/</link><pubDate>Thu, 16 Jun 2022 19:13:09 -0600</pubDate><guid>https://rsandz.github.io/skills/embedded/</guid><description>Having studied computer engineering, I&amp;rsquo;m can work with a multitude of computer technologies to solve problems. These technologies include:
Single Board Computers Microcontrollers FPGAs</description></item><item><title>Imaging System for RPAS - Capstone Project</title><link>https://rsandz.github.io/projects/capstone/</link><pubDate>Thu, 16 Jun 2022 03:09:42 -0600</pubDate><guid>https://rsandz.github.io/projects/capstone/</guid><description>&lt;p>Final capstone project for my computer engineering degree. The imaging system can
support multiple cameras and can produce video and image output while onboard
a remotely piloted aerial system (RPAS).&lt;/p></description></item><item><title>Arduino Melodies</title><link>https://rsandz.github.io/projects/arduionomelodies/</link><pubDate>Thu, 16 Jun 2022 02:38:25 -0600</pubDate><guid>https://rsandz.github.io/projects/arduionomelodies/</guid><description>A chip tune player for the Arduino. Program your favourite melodies and hear your Arduino play the music through a buzzer component!</description></item><item><title>UAARG Imaging Server</title><link>https://rsandz.github.io/projects/uaargserver/</link><pubDate>Thu, 16 Jun 2022 00:07:11 -0600</pubDate><guid>https://rsandz.github.io/projects/uaargserver/</guid><description>The University of Alberta Aerial Robotics Group&amp;rsquo;s (UAARG) imaging server allows the team to perform aerial image processing in a distributed manner. It utilizes Python&amp;rsquo;s Flask with SQLite3 to create a lightweight server to coordinate and store data from the UAV and processing clients.</description></item><item><title>Docker Auto Scaler</title><link>https://rsandz.github.io/projects/autoscaler/</link><pubDate>Wed, 15 Jun 2022 23:25:41 -0600</pubDate><guid>https://rsandz.github.io/projects/autoscaler/</guid><description>Auto scale a Docker application based on amount of requests. Implemented using the Docker SDK for Python and provides a front-end webpage to monitor statistics.</description></item><item><title>Mini Petri Net</title><link>https://rsandz.github.io/projects/minipetrinet/</link><pubDate>Wed, 15 Jun 2022 22:28:49 -0600</pubDate><guid>https://rsandz.github.io/projects/minipetrinet/</guid><description>Mini Petri Net simulates a petri net on your browser. Petri nets have a multitude of application in fields like reliability engineering, process control and many more!</description></item></channel></rss>